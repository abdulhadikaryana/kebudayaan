<?php/** * NewsController * * Controller untuk melakukan fungsi2 yang berkaitan dengan * news * * @package Front Controller */class NewsController extends Budpar_Controller_Common{    /**     * IS: -     * FS: -     * Desc: Fungsi inisialisasi     */    public function init()    {        parent::init();                $this->view->bigPageTitle = $this->view->translate('News');        $this->view->bgClass = "red";        //$this->view->colorClass = "red-color";    }    /**     * IS: -     * FS: Mengirimkan ke viewer: news, menuTitle, pageTitle     * Desc: Fungsi untuk menampilkan daftar news     */    public function indexAction()    {        $this->_helper->layout->setLayout('kebudayaan');        $newsDb = new Model_DbTable_News;        $news = $newsDb->getAllWithDesc($this->_languageId);        // $this->view->news = parent::setPaginator($news);        $this->view->news = $news;        $this->view->count = count($news);        // id_page_news = news        $this->view->menuTitle = $this->view->translate('id_menu_news');        $this->view->pageTitle = $this->view->translate('id_page_news');    }    /**     * IS: Parameter id, title terdeklarasi     * Desc: Fungsi untuk menampilkan detail news     */    public function detailAction()    {        $this->_helper->layout->setLayout('kebudayaan');                // Varible        $contentType = 1; // News        // Param        $id = $this->_getParam('id');        $title = $this->_getParam('title');        // Model        $newsDb = new Model_DbTable_News;                // Data        $news = $newsDb->getAllWithDescById($id,$this->_languageId);//        $author = $newsDb->getAuthor($id,$this->_languageId)->toArray();//        $authorName = (empty($author))? '' : $author['name'];        //if content is empty, will be redirecting to list of news        if($news['content'])        {            //update viewer            //hanya increamen 1 saja setiap kali content detaul di load//            $newsDb->updateField($id,array('viewer'=>$news['viewer']+1));            // View            $this->view->news = $news;            $this->view->id = $id;//            $this->view->author = $authorName;        }        else        {            $this->_redirector->gotoUrl($this->view->baseUrl('/news/index/'));                    }    }    /**     * IS : -     * FS : -     * Desc : controller untuk ! form     */    /**     * IS: -     * FS: -     * Desc: Fungsi untuk generate RSS     */    public function rssAction()    {        // Tidak pake layout		//$this->getResponse()->setHeader('Content-Type', 'text/xml');        $this->_helper->layout->disableLayout();        // Model        $newsDb = new Model_DbTable_News;        $lang_id = $this->_languageId;        // Data        $newsQuery = $newsDb->getAllWithDescRss($lang_id, 10);        $news = $newsDb->fetchAll($newsQuery);        for($i=0; $i<count($news);$i++)        {        	$string = $news[$i]['title'];			$string = str_replace('“',' ',$string); 		    $string = str_replace('”',' ',$string); 		    $string = str_replace('�',' ',$string); 		    $string = str_replace('�',' ',$string);			$news[$i]['title'] = $this->xmlEntities(htmlentities($string, ENT_QUOTES));                                $string = $news[$i]['publish_date'];                        $string = str_replace('"', '',$string);                    $string = str_replace('"',' ', $string);                    $string = str_replace('�', ' ', $string);                    $string = str_replace('�', ' ',$string);                        $news[$i]['publish_date'] = $this->xmlEntities(htmlentities($string,ENT_QUOTES));                                                        	$string = $news[$i]['content'];			$string = str_replace('“',' ',$string); 		    $string = str_replace('”',' ',$string); 		    $string = str_replace('�',' ',$string); 		    $string = str_replace('�',' ',$string);			$news[$i]['content'] = $this->xmlEntities(htmlentities($string, ENT_QUOTES));        }		$this->view->data = $news;    }	protected function xmlEntities($str) 	{ 	    $xml = array('&#34;','&#38;','&#38;','&#60;','&#62;','&#160;','&#161;','&#162;','&#163;','&#164;','&#165;','&#166;','&#167;','&#168;','&#169;','&#170;','&#171;','&#172;','&#173;','&#174;','&#175;','&#176;','&#177;','&#178;','&#179;','&#180;','&#181;','&#182;','&#183;','&#184;','&#185;','&#186;','&#187;','&#188;','&#189;','&#190;','&#191;','&#192;','&#193;','&#194;','&#195;','&#196;','&#197;','&#198;','&#199;','&#200;','&#201;','&#202;','&#203;','&#204;','&#205;','&#206;','&#207;','&#208;','&#209;','&#210;','&#211;','&#212;','&#213;','&#214;','&#215;','&#216;','&#217;','&#218;','&#219;','&#220;','&#221;','&#222;','&#223;','&#224;','&#225;','&#226;','&#227;','&#228;','&#229;','&#230;','&#231;','&#232;','&#233;','&#234;','&#235;','&#236;','&#237;','&#238;','&#239;','&#240;','&#241;','&#242;','&#243;','&#244;','&#245;','&#246;','&#247;','&#248;','&#249;','&#250;','&#251;','&#252;','&#253;','&#254;','&#255;');	    $html = array('&quot;','&amp;','&amp;','&lt;','&gt;','&nbsp;','&iexcl;','&cent;','&pound;','&curren;','&yen;','&brvbar;','&sect;','&uml;','&copy;','&ordf;','&laquo;','&not;','&shy;','&reg;','&macr;','&deg;','&plusmn;','&sup2;','&sup3;','&acute;','&micro;','&para;','&middot;','&cedil;','&sup1;','&ordm;','&raquo;','&frac14;','&frac12;','&frac34;','&iquest;','&Agrave;','&Aacute;','&Acirc;','&Atilde;','&Auml;','&Aring;','&AElig;','&Ccedil;','&Egrave;','&Eacute;','&Ecirc;','&Euml;','&Igrave;','&Iacute;','&Icirc;','&Iuml;','&ETH;','&Ntilde;','&Ograve;','&Oacute;','&Ocirc;','&Otilde;','&Ouml;','&times;','&Oslash;','&Ugrave;','&Uacute;','&Ucirc;','&Uuml;','&Yacute;','&THORN;','&szlig;','&agrave;','&aacute;','&acirc;','&atilde;','&auml;','&aring;','&aelig;','&ccedil;','&egrave;','&eacute;','&ecirc;','&euml;','&igrave;','&iacute;','&icirc;','&iuml;','&eth;','&ntilde;','&ograve;','&oacute;','&ocirc;','&otilde;','&ouml;','&divide;','&oslash;','&ugrave;','&uacute;','&ucirc;','&uuml;','&yacute;','&thorn;','&yuml;');	    $str = str_replace($html,$xml,$str);	    $str = str_ireplace($html,$xml,$str);		return $str; 	}    /**     * IS: Parameter id terdeklarasi     * FS: Mengirimkan ke viewer: pageTitle     * Desc: Fungsi untuk generate breadcrumb     */    protected function _generateBreadcrumb()    {        // id_menu_news = 'News'        $listTitle = $this->view->translate('id_menu_news');        if($this->_hasParam('id'))        {            // Param            $newsId = $this->_getParam('id');            // Model            $newsDescDb = new Model_DbTable_NewsDesc;            // Data            $newsTitle = $newsDescDb->getTitleById($newsId, $this->_languageId);        }        $texthomelink = $this->view->translate('id_menu_home');        $links = null;        switch ($this->_request->getActionName())        {            case 'detail':                $links = array(                        $texthomelink => $this->view->baseUrl('/'),                        $listTitle => $this->view->baseUrl('news'),                        $newsTitle => '',                );                $this->view->pageTitle = $newsTitle;                break;            case 'index':            default:                $links = array(                        $texthomelink => $this->view->baseUrl('/'),                        $listTitle => '',                );                $this->view->pageTitle = $listTitle;        }        Zend_Registry::set('breadcrumb', $links);    }}